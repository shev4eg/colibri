/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$account-name: 'account';
$account-x: 116px;
$account-y: 92px;
$account-offset-x: -116px;
$account-offset-y: -92px;
$account-width: 11px;
$account-height: 12px;
$account-total-width: 148px;
$account-total-height: 128px;
$account-image: 'sprite.png';
$account: (116px, 92px, -116px, -92px, 11px, 12px, 148px, 128px, 'sprite.png', 'account', );
$checkbox-name: 'checkbox';
$checkbox-x: 128px;
$checkbox-y: 0px;
$checkbox-offset-x: -128px;
$checkbox-offset-y: 0px;
$checkbox-width: 20px;
$checkbox-height: 20px;
$checkbox-total-width: 148px;
$checkbox-total-height: 128px;
$checkbox-image: 'sprite.png';
$checkbox: (128px, 0px, -128px, 0px, 20px, 20px, 148px, 128px, 'sprite.png', 'checkbox', );
$checked-name: 'checked';
$checked-x: 128px;
$checked-y: 20px;
$checked-offset-x: -128px;
$checked-offset-y: -20px;
$checked-width: 20px;
$checked-height: 20px;
$checked-total-width: 148px;
$checked-total-height: 128px;
$checked-image: 'sprite.png';
$checked: (128px, 20px, -128px, -20px, 20px, 20px, 148px, 128px, 'sprite.png', 'checked', );
$facebook-name: 'facebook';
$facebook-x: 92px;
$facebook-y: 64px;
$facebook-offset-x: -92px;
$facebook-offset-y: -64px;
$facebook-width: 28px;
$facebook-height: 28px;
$facebook-total-width: 148px;
$facebook-total-height: 128px;
$facebook-image: 'sprite.png';
$facebook: (92px, 64px, -92px, -64px, 28px, 28px, 148px, 128px, 'sprite.png', 'facebook', );
$google-plus-name: 'google-plus';
$google-plus-x: 0px;
$google-plus-y: 0px;
$google-plus-offset-x: 0px;
$google-plus-offset-y: 0px;
$google-plus-width: 64px;
$google-plus-height: 64px;
$google-plus-total-width: 148px;
$google-plus-total-height: 128px;
$google-plus-image: 'sprite.png';
$google-plus: (0px, 0px, 0px, 0px, 64px, 64px, 148px, 128px, 'sprite.png', 'google-plus', );
$ico-crown-name: 'ico_crown';
$ico-crown-x: 128px;
$ico-crown-y: 60px;
$ico-crown-offset-x: -128px;
$ico-crown-offset-y: -60px;
$ico-crown-width: 20px;
$ico-crown-height: 16px;
$ico-crown-total-width: 148px;
$ico-crown-total-height: 128px;
$ico-crown-image: 'sprite.png';
$ico-crown: (128px, 60px, -128px, -60px, 20px, 16px, 148px, 128px, 'sprite.png', 'ico_crown', );
$ico-headphone-name: 'ico_headphone';
$ico-headphone-x: 92px;
$ico-headphone-y: 92px;
$ico-headphone-offset-x: -92px;
$ico-headphone-offset-y: -92px;
$ico-headphone-width: 24px;
$ico-headphone-height: 22px;
$ico-headphone-total-width: 148px;
$ico-headphone-total-height: 128px;
$ico-headphone-image: 'sprite.png';
$ico-headphone: (92px, 92px, -92px, -92px, 24px, 22px, 148px, 128px, 'sprite.png', 'ico_headphone', );
$ico-mark-name: 'ico_mark';
$ico-mark-x: 128px;
$ico-mark-y: 92px;
$ico-mark-offset-x: -128px;
$ico-mark-offset-y: -92px;
$ico-mark-width: 12px;
$ico-mark-height: 17px;
$ico-mark-total-width: 148px;
$ico-mark-total-height: 128px;
$ico-mark-image: 'sprite.png';
$ico-mark: (128px, 92px, -128px, -92px, 12px, 17px, 148px, 128px, 'sprite.png', 'ico_mark', );
$instagram-name: 'instagram';
$instagram-x: 64px;
$instagram-y: 92px;
$instagram-offset-x: -64px;
$instagram-offset-y: -92px;
$instagram-width: 28px;
$instagram-height: 28px;
$instagram-total-width: 148px;
$instagram-total-height: 128px;
$instagram-image: 'sprite.png';
$instagram: (64px, 92px, -64px, -92px, 28px, 28px, 148px, 128px, 'sprite.png', 'instagram', );
$linkedin-name: 'linkedin';
$linkedin-x: 0px;
$linkedin-y: 64px;
$linkedin-offset-x: 0px;
$linkedin-offset-y: -64px;
$linkedin-width: 64px;
$linkedin-height: 64px;
$linkedin-total-width: 148px;
$linkedin-total-height: 128px;
$linkedin-image: 'sprite.png';
$linkedin: (0px, 64px, 0px, -64px, 64px, 64px, 148px, 128px, 'sprite.png', 'linkedin', );
$pen-name: 'pen';
$pen-x: 128px;
$pen-y: 40px;
$pen-offset-x: -128px;
$pen-offset-y: -40px;
$pen-width: 20px;
$pen-height: 20px;
$pen-total-width: 148px;
$pen-total-height: 128px;
$pen-image: 'sprite.png';
$pen: (128px, 40px, -128px, -40px, 20px, 20px, 148px, 128px, 'sprite.png', 'pen', );
$pin-name: 'pin';
$pin-x: 128px;
$pin-y: 109px;
$pin-offset-x: -128px;
$pin-offset-y: -109px;
$pin-width: 10px;
$pin-height: 14px;
$pin-total-width: 148px;
$pin-total-height: 128px;
$pin-image: 'sprite.png';
$pin: (128px, 109px, -128px, -109px, 10px, 14px, 148px, 128px, 'sprite.png', 'pin', );
$post-name: 'post';
$post-x: 128px;
$post-y: 76px;
$post-offset-x: -128px;
$post-offset-y: -76px;
$post-width: 20px;
$post-height: 16px;
$post-total-width: 148px;
$post-total-height: 128px;
$post-image: 'sprite.png';
$post: (128px, 76px, -128px, -76px, 20px, 16px, 148px, 128px, 'sprite.png', 'post', );
$twitter-name: 'twitter';
$twitter-x: 64px;
$twitter-y: 0px;
$twitter-offset-x: -64px;
$twitter-offset-y: 0px;
$twitter-width: 64px;
$twitter-height: 64px;
$twitter-total-width: 148px;
$twitter-total-height: 128px;
$twitter-image: 'sprite.png';
$twitter: (64px, 0px, -64px, 0px, 64px, 64px, 148px, 128px, 'sprite.png', 'twitter', );
$vk-name: 'vk';
$vk-x: 64px;
$vk-y: 64px;
$vk-offset-x: -64px;
$vk-offset-y: -64px;
$vk-width: 28px;
$vk-height: 28px;
$vk-total-width: 148px;
$vk-total-height: 128px;
$vk-image: 'sprite.png';
$vk: (64px, 64px, -64px, -64px, 28px, 28px, 148px, 128px, 'sprite.png', 'vk', );
$spritesheet-width: 148px;
$spritesheet-height: 128px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($account, $checkbox, $checked, $facebook, $google-plus, $ico-crown, $ico-headphone, $ico-mark, $instagram, $linkedin, $pen, $pin, $post, $twitter, $vk, );
$spritesheet: (148px, 128px, 'sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
